{"knowledge": "缺页中断。", "question": "(20140410-2-期中考试试题v4a答案.docx)页表\r\n（20分）内存管理（Memory Management）是操作系统的重要职能之一，现代操作系统基于硬件所提供的内存管理单元（Memory\r\nManagement Unit），可以为应用程序提供相互隔离的虚拟地址空间，同时对物理内存进行高效的管理。在32位x86架构提供的MMU中，除了传统的段模式\r\n以外，也同时包括页管理机制。页管理所需要的硬件支持包括两个部分：一是完成虚拟地址到物理地址映射的页表，二是页异常（Page Fault）。\r\n1) 在32位的x86系统中，一般使用二级页表，分别用虚拟地址的31-22位和21-12位作为页表内相应页表项的偏移，此时一个物理页的大小为___(1a)_\r\n___K；实际上，x86系统同样允许只使用一级页表，页表项偏移仍然取虚拟地址的31-22位，此时一个物理页的大小为__(1b)__K。\r\n2) 发生页异常时，硬件会保存执行时的上下文并关闭中断，然后跳转到操作系统设置好的页错误处理例程，这里的“上下文”应该包括（在你认为需要保存的寄存器前打勾，\r\n并简述如果不保存会产生什么问题）：\r\n(2a)（ ）指令计数器（CS, EIP）\r\n_______________________________________________________________\r\n(2b)（ ）堆栈指针（SS, ESP）\r\n_______________________________________________________________\r\n(2c)（ ）通用寄存器（EAX、EBX、……）\r\n_______________________________________________________________\r\n(2d)（ ）执行时标志位寄存器（EFLAGS）\r\n_______________________________________________________________\r\n(2e)（ ）控制寄存器（CR0、CR3、……）\r\n_______________________________________________________________\r\n3) 页异常处理完毕后，返回用户程序继续执行，此时执行的第一条用户指令为（ ）\r\nA. 触发页异常指令的上一条指令\r\nB. 触发页异常的指令\r\nC. 触发页异常指令的下一条指令\r\n4) 除了维护基本的地址映射关系外，x86页表的每一个页表项还包括一些其它配置和信息位，例如该页是否可写（W），是否可以在Ring 3访问（U），是否曾被访\r\n问过（A），以及是否曾被写过（D）。请根据x86页表对这些位的定义，在下表中填写在页表项的几种情况下进行各种操作时，页表项的内容会如何变化。（只需写出会变化\r\n的位和/或会产生的事件，如缺页异常，形式可参考表中已填入的部分内容）\r\n| |W=0 U=0 A=0 D=0|W=1 U=0 A=0 D=0|W=0 U=1 A=1 D=0|W=1 U=1 A=1 D=1|\r\n|在ring0读| | | |无变化 |\r\n|在ring0写| |A→1，D→1 | | |\r\n|在ring3读| | | | |\r\n|在ring3写| | |缺页异常 | |", "degree_of_difficulty": "1", "source": "网络", "answer": "  ", "type": "question_answer", "options": "  \r\n"}