{"knowledge": "信号量。", "question": "\"有一个许多进程共享的数据区，有一些只读这个数据区的进程(reader)和一些只往数据区中写数据的进程(writer)；此外还需满足如下条件：\r\n1.任意多的读进程可以同时读这个文件。 2.一次只有一个写进程可以往文件中写。 3.如果一个写进程正在往文件中写时，则禁止任何读进程和其他写进程。\r\n实现基于先来先服务策略的读者－写者的问题，具体要求描述如下： 1.存在m个读者和n个写者，共享同一个缓冲区。\r\n2.当没有读者在读，写者在写时，读者写者均可进入读或写。 3.当有读者在读时： (1) 写者来了，则写者等待。 (2)\r\n读者来了，则分两种情况处理：无写者等待，则读者可以直接进入读操作，如果有写者等待，则读者必须依次等待。 4.当有写者在写时，写者或读者来了，均需等待。\r\n5.当写者写完后，如果等待队列中第一个是写者，则唤醒该写者；如果等待队列中第一个是读者，则唤醒该队列中从读者开始连续的所有读者。\r\n6.当最后一个读者读后，如果有写者在等待，则唤醒第一个等待的写者。\"", "degree_of_difficulty": "1", "source": "网络", "answer": "前面的实现方法中可能出现多个写和读同时等待同一个锁打开，一旦锁打开，会随机挑选一个操作执行，但我们知道在写操作之后加入的读操作是不能在写操作之前执行的，所以", "type": "question_answer", "options": "  \r\n"}