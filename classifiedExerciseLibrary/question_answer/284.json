{"knowledge": "进程和线程管理。", "question": "(spoc)设计一个简化的进程管理子系统，可以管理并调度如下简化进程.给出了[参考代码](\"https://github.com/chyyuu/ucore_lab/blob/master/related_info/lab4/process-concept-homework.py)，请理解代码，并完成＂YOUR CODE\"部分的内容．　可２个人一组\r\n## 进程的状态\r\n```\r\n    RUNNING - 进程正在使用CPU\r\n    READY - 进程可使用CPU\r\n    DONE - 进程结束\r\n```\r\n## 进程的行为\r\n```\r\n    使用CPU,\r\n    发出YIELD请求,放弃使用CPU\r\n```\r\n## 进程调度\r\n```\r\n    使用FIFO/FCFS：先来先服务,\r\n        先查找位于proc_info队列的curr_proc元素(当前进程)之后的进程(curr_proc+1..end)是否处于READY态，\r\n        再查找位于proc_info队列的curr_proc元素(当前进程)之前的进程(begin..curr_proc-1)是否处于READY态\r\n        如都没有，继续执行curr_proc直到结束\r\n```\r\n## 关键模拟变量\r\n```\r\n    进程控制块\r\n    PROC_CODE = 'code_'\r\n    PROC_PC = 'pc_'\r\n    PROC_ID = 'pid_'\r\n    PROC_STATE = 'proc_state_'\r\n```\r\n   * 当前进程 curr_proc\r\n   * 进程列表：proc_info是就绪进程的队列（list），\r\n   * 在命令行（如下所示）需要说明每进程的行为特征：（１）使用CPU ;(2)等待I/O\r\n```\r\n    -l PROCESS_LIST, --processlist= X1:Y1,X2:Y2,...\r\n    X 是进程的执行指令数; \r\n    Ｙ是执行CPU的比例(0..100) ，如果是100，表示不会发出yield操作\r\n```\r\n    进程切换行为：系统决定何时(when)切换进程:进程结束或进程发出yield请求\r\n\r\n## 进程执行\r\n```\r\ninstruction_to_execute = self.proc_info[self.curr_proc][PROC_CODE].pop(0)\r\n```\r\n## 关键函数\r\n```\r\n    系统执行过程：run\r\n    执行状态切换函数:　move_to_ready/running/done　\r\n    调度函数：next_proc\r\n```\r\n## 执行实例\r\n例１\r\n```\r\n$./process-simulation.py -l 5:50\r\nProcess 0\r\n  yld\r\n  yld\r\n  cpu\r\n  cpu\r\n  yld\r\n\r\nImportant behaviors:\r\n  System will switch when the current process is FINISHED or ISSUES AN YIELD\r\nTime     PID: 0 \r\n  1     RUN:yld \r\n  2     RUN:yld \r\n  3     RUN:cpu \r\n  4     RUN:cpu \r\n  5     RUN:yld\r\n```\r\n例２\r\n```\r\n$./process-simulation.py  -l 5:50,5:50\r\nProduce a trace of what would happen when you run these processes:\r\nProcess 0\r\n  yld\r\n  yld\r\n  cpu\r\n  cpu\r\n  yld\r\n\r\nProcess 1\r\n  cpu\r\n  yld\r\n  cpu\r\n  cpu\r\n  yld\r\n\r\nImportant behaviors:\r\n  System will switch when the current process is FINISHED or ISSUES AN YIELD\r\nTime     PID: 0     PID: 1 \r\n  1     RUN:yld      READY \r\n  2       READY    RUN:cpu \r\n  3       READY    RUN:yld \r\n  4     RUN:yld      READY \r\n  5       READY    RUN:cpu \r\n  6       READY    RUN:cpu \r\n  7       READY    RUN:yld \r\n  8     RUN:cpu      READY \r\n  9     RUN:cpu      READY \r\n 10     RUN:yld      READY \r\n 11     RUNNING       DONE\r\n```", "degree_of_difficulty": "1", "source": "网络", "answer": "", "type": "question_answer", "options": "  \r\n"}