{"knowledge": "物理内存管理。", "question": "(spoc)有一台只有页机制的简化80386的32bit计算机，有地址范围位0~256MB的物理内存空间（physical memory），可表示大小为256MB，范围为0xC0000000~0xD0000000的虚拟地址空间（virtual address space）,页大小（page size）为4KB，采用二级页表，一个页目录项（page directory entry ，PDE）大小为4B,一个页表项（page-table entries PTEs）大小为4B，1个页目录表大小为4KB，1个页表大小为4KB。\r\n```\r\nPTE格式（32 bit） :\r\n  PFN19 ... PFN0|NOUSE9 ... NOUSE0|WRITABLE|VALID\r\nPDE格式（32 bit） :\r\n  PT19 ... PT0|NOUSE9 ... NOUSE0|WRITABLE|VALID\r\n```\r\n其中：\r\n```\r\nNOUSE9 ... NOUSE0为保留位，要求固定为0\r\nWRITABLE：1表示可写，0表示只读\r\nVLAID：1表示有效，0表示无效\r\n```\r\n假设ucore OS已经为此机器设置好了针对如下虚拟地址<-->物理地址映射的二级页表，设置了页目录基址寄存器（page directory base register，PDBR）保存了页目录表的物理地址（按页对齐），其值为0。已经建立好了从物理地址0x1000~0x41000的二级页表，且页目录表的index为0x300~0x363的页目录项的(PT19 ... PT0)的值=(index-0x300+1)。 请写出一个translation程序（可基于python, ruby, C, C++，LISP等），输入是一个虚拟地址和一个物理地址，能够自动计算出对应的页目录项的index值,页目录项内容的值，页表项的index值，页表项内容的值。即(pde_idx, pde_ctx, pte_idx, pte_cxt)\r\n\r\n请用如下值来验证你写的程序的正确性：\r\n```\r\nva 0xc2265b1f, pa 0x0d8f1b1f\r\nva 0xcc386bbc, pa 0x0414cbbc\r\nva 0xc7ed4d57, pa 0x07311d57\r\nva 0xca6cecc0, pa 0x0c9e9cc0\r\nva 0xc18072e8, pa 0x007412e8\r\nva 0xcd5f4b3a, pa 0x06ec9b3a\r\nva 0xcc324c99, pa 0x0008ac99\r\nva 0xc7204e52, pa 0x0b8b6e52\r\nva 0xc3a90293, pa 0x0f1fd293\r\nva 0xce6c3f32, pa 0x007d4f32\r\n```\r\n参考的输出格式为：\r\n```\r\nva 0xcd82c07c, pa 0x0c20907c, pde_idx 0x00000336, pde_ctx  0x00037003, pte_idx 0x0000002c, pte_ctx  0x0000c20b\r\n```", "degree_of_difficulty": "1", "source": "网络", "answer": "", "type": "question_answer", "options": "  \r\n"}